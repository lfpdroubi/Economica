((1+.02)/(1+.08))^1000
((1+.10)/(1+.08))^1000
((1+.07)/(1+.08))^1000
(1-(1.6/1.042)^5)/(.042-.6)
(1-(1.6/1.042)^5)/(.042-.6)*74043.25
13.5*73043.25
13.506*73043.25
13.5*74043.25
13.505*74043.25
13.506*74043.25
13.5056*74043.25
13.50562*74043.25
FAcC(.5/100, 24)
FAcC(.5/100, 24)*5000
FFA(.5/100,24)
146300*.0393
FRC <- function(i, t) {
i*(1+i)^t/((1+i)^t-1)
}
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FRC(i/100, t)
}
}
frc <- as.data.frame(M)
colnames(frc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
frc |>
kable(digits = 4, row.names = T,
caption = "Fator de Recuperação do Capital (FRC)")
knitr::opts_chunk$set(cache=TRUE, echo=FALSE, fig.pos="H",
fig.path="./img-modelagem/",
fig.align = "center", dev = "png", dpi = 600,
out.width = "80%", warning = FALSE, message = FALSE,
size = "small")
library(ggplot2)
library(ggthemes)
theme_set(theme_bw())
library(appraiseR)
library(knitr)
FRC <- function(i, t) {
i*(1+i)^t/((1+i)^t-1)
}
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FRC(i/100, t)
}
}
frc <- as.data.frame(M)
colnames(frc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
frc |>
kable(digits = 4, row.names = T,
caption = "Fator de Recuperação do Capital (FRC)")
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FAC(i/100, t)
}
}
fac <- as.data.frame(M)
colnames(fac) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
fac |>
kable(digits = 4, row.names = T,
caption = "Fator de Atualização do Capital (FAC)")
FAC <- function(i, t) {
1/(1+i)^t
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FAC(j[i], t)
}
}
fac <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
fac |>
kable(digits = 4, row.names = T,
caption = "Fator de Atualização do Capital (FAC)")
FVP <- function(i, t) {
((1+i)^t-1)/(i*(1+i)^t)
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FVP(j[i], t)
}
}
fac <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
fac |>
kable(digits = 4, row.names = T,
caption = "Fator de Valor Presente (FVP)")
FVP <- function(i, t) {
((1+i)^t-1)/(i*(1+i)^t)
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FVP(j[i], t)
}
}
fac <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
fac |>
kable(digits = 3, row.names = T,
caption = "Fator de Valor Presente (FVP)")
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FVP(i/100, t)
}
}
fac <- as.data.frame(M)
colnames(fac) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
fac |>
kable(digits = 4, row.names = T,
caption = "Fator de Atualização do Capital (FAC)")
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FVP(i/100, t)
}
}
fac <- as.data.frame(M)
colnames(fac) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
fac |>
kable(digits = 3, row.names = T,
caption = "Fator de Valor Presente (FVP)")
FAcC <- function(i, t){
((1+i)^t-1)/i
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FAcC(j[i], t)
}
}
facc <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Acumulação Composta (FAcC)")
FAcC <- function(i, t){
((1+i)^t-1)/i
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FAcC(j[i], t)
}
}
facc <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Acumulação Composta (FAcC)")
FAcC <- function(i, t){
((1+i)^t-1)/i
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FAcC(j[i], t)
}
}
facc <- as.data.frame(M)
colnames(facc) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Acumulação Composta (FAcC)")
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FAcC(i/100, t)
}
}
facc <- as.data.frame(M)
colnames(facc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Valor Presente (FVP)")
FFA <- function(i, t) {
i/((1+i)^t-1)
}
M <- matrix(nrow = 60, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FFA(j[i], t)
}
}
ffa <- as.data.frame(M)
colnames(ffa) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
ffa |>
kable(digits = 3, row.names = T,
caption = "Fator Fundo de Amortização (FFA)")
M <- matrix(nrow = 60, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FFA(i/100, t)
}
}
ffa <- as.data.frame(M)
colnames(ffa) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
ffa |>
kable(digits = 4, row.names = T,
caption = "Fator Fundo de Amortização (FFA)")
#| label: fig-FCGradientePA
#| fig-cap: "Fluxo de Caixa de um empréstimo com pagamentos crescentes em PA."
#| out-width: "100%"
#| echo: false
p <- CashFlowDiagram(periods = 10,
incomes = c(90000, rep(NA, 10)),
expenses = c(rep(NA, 2), 1:9*3000),
title = "Fluxo de Caixa com Gradiente em PA"
)
p +
annotate("text", x = 2, y = 85000, label = "PV = 90.000,00", size = 4, color = "blue") +
# annotate("text", x = 12, y = 2500, label = "FV", size = 4, color = "blue") +
annotate("text", x = seq(2, 10, by = 1),
y = 1000*c(-7, -10, -13, -16, -19, -22, -25, -28, -31),
label = paste(rep("R[", 9), 1:9, "]", sep = ""), parse = TRUE,
size = 4, color = "red") +
annotate("label", x = 5, y = 7500, label = "i = 5,80% (a.m.)", size = 4)
90/12
10*12
15*12
20*12
25*12
30*12
35*12
40*12
FAC <- function(i, t) {
1/(1+i)^t
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
M <- matrix(nrow = 69, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FAC(j[i], periods[t])
}
}
fac <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
fac |>
kable(digits = 4, row.names = T,
caption = "Fator de Atualização do Capital (FAC)")
FAC <- function(i, t) {
1/(1+i)^t
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
M <- matrix(nrow = 69, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FAC(j[i], periods[t])
}
}
fac <- as.data.frame(M)
colnames(fac) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
rownames(fac) <- periods
fac |>
kable(digits = 4, row.names = T,
caption = "Fator de Atualização do Capital (FAC)")
FRC <- function(i, t) {
i*(1+i)^t/((1+i)^t-1)
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FRC(j[i], periods[t])
}
}
frc <- as.data.frame(M)
colnames(frc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
frc |>
kable(digits = 4, row.names = T,
caption = "Fator de Recuperação do Capital (FRC)")
FRC <- function(i, t) {
i*(1+i)^t/((1+i)^t-1)
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FRC(j[i], periods[t])
}
}
frc <- as.data.frame(M)
colnames(frc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
rownames(frc) <- periods
frc |>
kable(digits = 4, row.names = T,
caption = "Fator de Recuperação do Capital (FRC)")
FAcC <- function(i, t){
((1+i)^t-1)/i
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
M <- matrix(nrow = 69, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FAcC(j[i], periods[t])
}
}
facc <- as.data.frame(M)
colnames(facc) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
rownames(facc) <- periods
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Acumulação Composta (FAcC)")
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FAcC(i/100, periods[t])
}
}
facc <- as.data.frame(M)
colnames(facc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
rownames(facc) <- periods
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Valor Presente (FVP)")
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FAcC(i/100, periods[t])
}
}
facc <- as.data.frame(M)
colnames(facc) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
rownames(facc) <- periods
facc |>
kable(digits = 3, row.names = T,
caption = "Fator de Acumulação Composta (FAcC)")
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:60) {
for (i in 1:10){
M[t,i] <- FFA(i/100, periods[t])
}
}
ffa <- as.data.frame(M)
colnames(ffa) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
rownames(ffa) <- periods
ffa |>
kable(digits = 4, row.names = T,
caption = "Fator Fundo de Amortização (FFA)")
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FFA(i/100, periods[t])
}
}
ffa <- as.data.frame(M)
colnames(ffa) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
rownames(ffa) <- periods
ffa |>
kable(digits = 4, row.names = T,
caption = "Fator Fundo de Amortização (FFA)")
FFA <- function(i, t) {
i/((1+i)^t-1)
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
M <- matrix(nrow = 69, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FFA(j[i], periods[t])
}
}
ffa <- as.data.frame(M)
colnames(ffa) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
rownames(ffa) <- periods
ffa |>
kable(digits = 4, row.names = T,
caption = "Fator Fundo de Amortização (FFA)")
FVP <- function(i, t) {
((1+i)^t-1)/(i*(1+i)^t)
}
periods <- c(1:60, 90, 100, 120, 180, 240, 300, 360, 420, 480)
M <- matrix(nrow = 69, ncol = 10)
j <- c((1+2/100)^(1/12)-1, (1+3/100)^(1/12)-1, (1+4/100)^(1/12)-1,
(1+5/100)^(1/12)-1, 0.5/100, (1+8/100)^(1/12)-1, (1+9/100)^(1/12)-1,
(1+10/100)^(1/12)-1, (1+11/100)^(1/12)-1, (1+12/100)^(1/12)-1)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FVP(j[i], periods[t])
}
}
fvp <- as.data.frame(M)
colnames(fvp) <- c(".165%", ".247%", ".327%", ".407%", ".50%", ".64%", ".72%",
".80%", ".87%", ".95%")
rownames(fvp) <- periods
fvp |>
kable(digits = 3, row.names = T,
caption = "Fator de Valor Presente (FVP)")
M <- matrix(nrow = 69, ncol = 10)
for (t in 1:69) {
for (i in 1:10){
M[t,i] <- FVP(i/100, periods[t])
}
}
fvp <- as.data.frame(M)
colnames(fvp) <- c("1%", "2%", "3%", "4%", "5%", "6%", "7%", "8%", "9%", "10%")
rownames(fvp) <- periods
fvp |>
kable(digits = 3, row.names = T,
caption = "Fator de Valor Presente (FVP)")
FRC(.10,15)
FVP(.10, 15)
FVP(.1, 15)
(1-(1/.10)^10)/.10
(1-(1/(1+.10))^10)/.10
(1-(1/1.10)^10)/.10
(1-(1/1.10)^15)/.10
12*400
4000/4800
4000/4800-1
4200/4800-1
4400/4800-1
.9*4800
4320/400
4000/400
.8*4800
.85*4800
4080/400
4800*.05
4800*.95
4560/400
1248.89/1387.66
1248.89/138.77
4000/400
4000*.95
3800/400
2699/2998.89
2669/299.89
2469.05/2599
.9*2998.89
(1+4.5/100)^12
(1+4.5/100)^12-1
(1+4.5/1200)^12-1
.5/12
5/12
library(FinancialMath)
amort.period(Loan = 400000, n = 360, pmt = NA, i = 4.5/100, ic = 12, pf = 12)
?aomrt.period
amort.period()
?amort.period()
library(EnvStats)
install.packages("gbutils")
library(ggplot2)
ggplot() + stat_function(dpareto, args = c(3, 1), n = 100)
ggplot() + stat_function(fun = dpareto, args = c(3, 1), n = 100)
?dpareto
ggplot() + stat_function(fun = dpareto, args = c(2, 1), n = 100)
35/24
36/24
24/18
18/24
.75*36
18/24*36
27/18
100000*1.5/100*24
100000*1.5*18/100
